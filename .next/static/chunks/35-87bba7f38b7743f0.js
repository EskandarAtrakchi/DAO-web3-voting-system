"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35],{1215:(t,e,n)=>{n.d(e,{dj:()=>c});var i=n(2149);let a=0,o=new Map,s=t=>{if(o.has(t))return;let e=setTimeout(()=>{o.delete(t),l({type:"REMOVE_TOAST",toastId:t})},1e6);o.set(t,e)},u=(t,e)=>{switch(e.type){case"ADD_TOAST":return{...t,toasts:[e.toast,...t.toasts].slice(0,1)};case"UPDATE_TOAST":return{...t,toasts:t.toasts.map(t=>t.id===e.toast.id?{...t,...e.toast}:t)};case"DISMISS_TOAST":{let{toastId:n}=e;return n?s(n):t.toasts.forEach(t=>{s(t.id)}),{...t,toasts:t.toasts.map(t=>t.id===n||void 0===n?{...t,open:!1}:t)}}case"REMOVE_TOAST":if(void 0===e.toastId)return{...t,toasts:[]};return{...t,toasts:t.toasts.filter(t=>t.id!==e.toastId)}}},r=[],p={toasts:[]};function l(t){p=u(p,t),r.forEach(t=>{t(p)})}function y(t){let{...e}=t,n=(a=(a+1)%Number.MAX_SAFE_INTEGER).toString(),i=()=>l({type:"DISMISS_TOAST",toastId:n});return l({type:"ADD_TOAST",toast:{...e,id:n,open:!0,onOpenChange:t=>{t||i()}}}),{id:n,dismiss:i,update:t=>l({type:"UPDATE_TOAST",toast:{...t,id:n}})}}function c(){let[t,e]=i.useState(p);return i.useEffect(()=>(r.push(e),()=>{let t=r.indexOf(e);t>-1&&r.splice(t,1)}),[t]),{...t,toast:y,dismiss:t=>l({type:"DISMISS_TOAST",toastId:t})}}},7687:(t,e,n)=>{n.d(e,{A3:()=>p,BX:()=>l,M0:()=>s,Yq:()=>r,ck:()=>u,cn:()=>o});var i=n(6522),a=n(4483);function o(){for(var t=arguments.length,e=Array(t),n=0;n<t;n++)e[n]=arguments[n];return(0,a.QP)((0,i.$)(e))}function s(t){return"".concat(t.substring(0,6),"...").concat(t.substring(38))}function u(t){return(Number(t)/1e18).toFixed(4)}function r(t){return new Date(1e3*t).toLocaleString()}function p(t){switch(t){case 0:return"General";case 1:return"Funding";case 2:return"Governance";default:return"Unknown"}}function l(t,e){let n=Math.floor(Date.now()/1e3);return e?"Executed":n>t?"Ready for execution":"Active"}},8949:(t,e,n)=>{n.d(e,{Web3Provider:()=>l,$:()=>y});var i=n(8081),a=n(2149),o=n(3455),s=n(6427),u=n(1215);let r=[{inputs:[{internalType:"address",name:"member",type:"address"}],name:"addMember",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_title",type:"string"},{internalType:"string",name:"_shortDesc",type:"string"},{internalType:"string",name:"_detailedDesc",type:"string"},{internalType:"enum DAOVotingSystem.ProposalType",name:"_type",type:"uint8"},{internalType:"uint256",name:"_votingPeriodDays",type:"uint256"}],name:"createProposal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"executeProposal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"string",name:"title",type:"string"},{indexed:!1,internalType:"uint256",name:"deadline",type:"uint256"}],name:"ProposalCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"balance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"inflow",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outflow",type:"uint256"}],name:"TreasuryUpdated",type:"event"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"vote",outputs:[],stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"bool",name:"support",type:"bool"}],name:"Voted",type:"event"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address payable",name:"to",type:"address"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"},{inputs:[],name:"activeProposals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDAOStats",outputs:[{internalType:"uint256",name:"_totalProposals",type:"uint256"},{internalType:"uint256",name:"_activeProposals",type:"uint256"},{internalType:"uint256",name:"_totalMembers",type:"uint256"},{internalType:"uint256",name:"_avgParticipation",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getProposal",outputs:[{components:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"string",name:"title",type:"string"},{internalType:"string",name:"shortDescription",type:"string"},{internalType:"string",name:"detailedDescription",type:"string"},{internalType:"enum DAOVotingSystem.ProposalType",name:"proposalType",type:"uint8"},{internalType:"uint256",name:"votingDeadline",type:"uint256"},{internalType:"uint256",name:"votesFor",type:"uint256"},{internalType:"uint256",name:"votesAgainst",type:"uint256"},{internalType:"bool",name:"executed",type:"bool"}],internalType:"struct DAOVotingSystem.Proposal",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTreasuryHistory",outputs:[{components:[{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"balance",type:"uint256"}],internalType:"struct DAOVotingSystem.TreasurySnapshot[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTreasuryInfo",outputs:[{internalType:"uint256",name:"_currentValue",type:"uint256"},{internalType:"uint256",name:"_monthlyInflow",type:"uint256"},{internalType:"uint256",name:"_monthlyOutflow",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"member",type:"address"}],name:"getVotingHistory",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"hasVoted",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"isMember",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"monthlyInflow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"monthlyOutflow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"string",name:"title",type:"string"},{internalType:"string",name:"shortDescription",type:"string"},{internalType:"string",name:"detailedDescription",type:"string"},{internalType:"enum DAOVotingSystem.ProposalType",name:"proposalType",type:"uint8"},{internalType:"uint256",name:"votingDeadline",type:"uint256"},{internalType:"uint256",name:"votesFor",type:"uint256"},{internalType:"uint256",name:"votesAgainst",type:"uint256"},{internalType:"bool",name:"executed",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalProposals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalVotes",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"treasuryBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"treasuryHistory",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"votingHistory",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],p=(0,a.createContext)({provider:null,signer:null,contract:null,address:null,isOwner:!1,isMember:!1,connectWallet:async()=>{},disconnectWallet:()=>{},isConnected:!1});function l(t){let{children:e}=t,[n,l]=(0,a.useState)(null),[y,c]=(0,a.useState)(null),[d,m]=(0,a.useState)(null),[T,b]=(0,a.useState)(null),[w,g]=(0,a.useState)(!1),[f,v]=(0,a.useState)(!1),[M,h]=(0,a.useState)(!1),{toast:S}=(0,u.dj)();async function A(){if(window.ethereum)try{await window.ethereum.request({method:"eth_requestAccounts"});let t=new o.k(window.ethereum),e=await t.getSigner(),n=await e.getAddress();console.log("\uD83D\uDD17 Wallet connected:",n);try{let i=new s.NZ("0x74Cf9087AD26D541930BaC724B7ab21bA8F00a27",r,e);console.log("✅ Contract connected:",i);let a=!1,o=!1;try{a=(await i.owner()).toLowerCase()===n.toLowerCase(),o=await i.isMember(n),console.log("\uD83C\uDFE0 Is Owner:",a),console.log("\uD83D\uDC65 Is Member:",o)}catch(t){console.warn("⚠️ Could not verify owner/member status:",t)}l(t),c(e),m(i),b(n),g(a),v(o),h(!0),S({title:"Wallet Connected",description:"Connected to ".concat(n.substring(0,6),"...").concat(n.substring(38))})}catch(i){console.error("❌ Error connecting to contract:",i),l(t),c(e),b(n),h(!0),S({title:"Wallet Connected",description:"Connected to ".concat(n.substring(0,6),"...").concat(n.substring(38),". Contract connection failed."),variant:"destructive"})}}catch(t){console.error("❌ Error connecting wallet:",t),S({title:"Connection Failed",description:"Failed to connect wallet. Please try again.",variant:"destructive"})}else S({title:"MetaMask Not Found",description:"Please install MetaMask to use this application.",variant:"destructive"})}function D(){l(null),c(null),m(null),b(null),g(!1),v(!1),h(!1),S({title:"Wallet Disconnected",description:"Your wallet has been disconnected."})}return(0,a.useEffect)(()=>(window.ethereum&&(window.ethereum.on("accountsChanged",()=>{D()}),window.ethereum.on("chainChanged",()=>{window.location.reload()})),()=>{var t;(null===(t=window.ethereum)||void 0===t?void 0:t.removeAllListeners)&&window.ethereum.removeAllListeners()}),[]),(0,i.jsx)(p.Provider,{value:{provider:n,signer:y,contract:d,address:T,isOwner:w,isMember:f,connectWallet:A,disconnectWallet:D,isConnected:M},children:e})}let y=()=>(0,a.useContext)(p)}}]);